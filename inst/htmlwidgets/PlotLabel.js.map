{"version":3,"file":"PlotLabel.es6.js","names":[],"mappings":"","sources":["PlotLabel.es6.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.PlotLabel = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// NB local require statements cannot be enabled until the ES6 porting is complete\n// const DisplayError = require('DisplayError')\n/* global DisplayError */\n/* global Image */ // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image\n\n\n/* To Refactor:\n * *no method to access the label promises (PlotData accesses the internal directly)\n */\n\n// PlotLabel class\n// The primary purpose of this class is to support images as the labels and\n// to parse them apart from the regular text labels\n\nvar PlotLabel = function () {\n  function PlotLabel(givenLabelArray, labelAlt, logoScale) {\n    var _this = this;\n\n    _classCallCheck(this, PlotLabel);\n\n    this.givenLabelArray = givenLabelArray;\n    this.labelAlt = labelAlt;\n    this.logoScale = logoScale;\n    this.promiseLabelArray = this.givenLabelArray.map(function (label, index) {\n      if (PlotLabel._isStringLinkToImg(label)) {\n        return _this._makeImgLabPromise(label, _this.labelAlt[index] || '', _this.logoScale[index]);\n      } else {\n        return _this._makeLabPromise(label);\n      }\n    });\n  }\n\n  PlotLabel.prototype.getLabels = function getLabels() {\n    return this.promiseLabelArray;\n  };\n\n  PlotLabel.prototype._makeLabPromise = function _makeLabPromise(label) {\n    return Promise.resolve({\n      width: null,\n      height: null,\n      label: label,\n      url: ''\n    });\n  };\n\n  PlotLabel.prototype._makeImgLabPromise = function _makeImgLabPromise(labelLink, labelAlt) {\n    var scalingFactor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    return new Promise(function (resolve) {\n      var img = new Image();\n      var imgLoaded = false;\n\n      img.onload = function () {\n        var defaultArea = 10000 * scalingFactor;\n        var height = this.height || 0;\n        var width = this.width || 0;\n        var aspectRatio = width / height;\n\n        var adjW = Math.sqrt(defaultArea * aspectRatio);\n        var adjH = adjW / aspectRatio;\n        img.src = ''; // remove img\n        imgLoaded = true;\n        return resolve({\n          width: adjW,\n          height: adjH,\n          label: labelAlt,\n          url: labelLink\n        });\n      };\n\n      img.onerror = function () {\n        if (imgLoaded) {\n          return null;\n        }\n\n        console.log('Error: Image URL not valid - ' + labelLink);\n        var defaultErrorLogoSize = 20;\n\n        return resolve({\n          width: defaultErrorLogoSize,\n          height: defaultErrorLogoSize,\n          label: '',\n          url: DisplayError.getErrorImgUrl()\n        });\n      };\n\n      img.src = labelLink;\n    });\n  };\n\n  PlotLabel._isStringLinkToImg = function _isStringLinkToImg(label) {\n    var isUrl = /^(https:|http:|\\/images\\/)/.test(label);\n    var correctExtension = /\\.(png|svg|jpg|gif)/.test(label);\n    return isUrl && correctExtension;\n  };\n\n  return PlotLabel;\n}();\n\nmodule.exports = PlotLabel;\n\n},{}]},{},[1])(1)\n});\n\n"],"sourceRoot":"/source/"}