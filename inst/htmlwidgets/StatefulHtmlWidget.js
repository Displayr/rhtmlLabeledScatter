// Generated by CoffeeScript 1.8.0
var StatefulHtmlWidget,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

StatefulHtmlWidget = (function(_super) {
  __extends(StatefulHtmlWidget, _super);

  function StatefulHtmlWidget() {
    StatefulHtmlWidget.__super__.constructor.call(this);
  }

  StatefulHtmlWidget.prototype.partialStateUpdate = function(k, v) {
    this.state[k] = v;
    this._updateStateListeners();
    return this._redraw();
  };

  StatefulHtmlWidget.prototype.getState = function() {
    return this.state;
  };

  StatefulHtmlWidget.prototype.setState = function(newState) {
    var err;
    if (_.isString(newState)) {
      try {
        this.state = JSON.parse(newState);
      } catch (_error) {
        err = _error;
        throw new Error('json parse error in setState(#newState): ' + err);
      }
    } else {
      this.state = _.clone(newState);
    }
    this._updateStateListeners();
    return this._redraw();
  };

  StatefulHtmlWidget.prototype.registerStateListener = function(listener) {
    if (!_.isArray(this.stateListeners)) {
      this.stateListeners = [];
    }
    return this.stateListeners.push(listener);
  };

  StatefulHtmlWidget.prototype._initializeState = function(newState) {
    return this.state = newState;
  };

  StatefulHtmlWidget.prototype._updateStateListeners = function() {
    if (!_.isArray(this.stateListeners)) {
      this.stateListeners = [];
    }
    return _.forEach(this.stateListeners, (function(_this) {
      return function(listener) {
        return listener(_.clone(_this.state));
      };
    })(this));
  };

  return StatefulHtmlWidget;

})(BaseRhtmlWidget);
