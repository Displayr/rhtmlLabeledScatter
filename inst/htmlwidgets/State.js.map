{"version":3,"file":"State.es6.js","names":[],"mappings":"","sources":["State.es6.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.State = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// This class interacts with Displayr's state mechanism\n// Careful with alterations here as very old state types need to be defended against\n\nvar State = function () {\n  function State(stateObj, stateChangedCallback, X, Y, label) {\n    _classCallCheck(this, State);\n\n    this.stateObj = stateObj;\n    this.stateChangedCallback = stateChangedCallback;\n    if (!_.isObject(this.stateObj)) {\n      this.stateObj = {};\n    }\n\n    // NB If the plot data (i.e., X, Y, labels) has changed we reset all user state\n    var storedX = this.isStoredInState('X') ? this.getStored('X') : [];\n    var storedY = this.isStoredInState('Y') ? this.getStored('Y') : [];\n    var storedLabel = this.isStoredInState('label') ? this.getStored('label') : [];\n    if (!_.isEqual(storedX, X) || !_.isEqual(storedY, Y) || !_.isEqual(storedLabel, label)) {\n      this.stateObj = {};\n      this.saveToState('X', X);\n      this.saveToState('Y', Y);\n      this.saveToState('label', label);\n    }\n\n    this.legendPts = this.isStoredInState('legendPts') ? _.uniq(this.getStored('legendPts')) : [];\n    this.userPositionedLabs = this.isStoredInState('userPositionedLabs') ? this.getStored('userPositionedLabs') : [];\n  }\n\n  State.prototype.isStoredInState = function isStoredInState(key) {\n    return _.has(this.stateObj, key);\n  };\n\n  State.prototype.getStored = function getStored(key) {\n    if (this.isStoredInState(key)) {\n      return this.stateObj[key];\n    }\n    throw new Error('key \\'' + key + ' not in state');\n  };\n\n  State.prototype.saveToState = function saveToState(key, val) {\n    if (_.isFunction(this.stateChangedCallback)) {\n      this.stateObj[key] = val;\n      this.stateChangedCallback(this.stateObj);\n    }\n  };\n\n  State.prototype.pushLegendPt = function pushLegendPt(id) {\n    this.legendPts.push(id);\n    _.remove(this.userPositionedLabs, function (e) {\n      return e.id === id;\n    });\n    this.saveToState('legendPts', this.legendPts);\n    this.saveToState('userPositionedLabs', this.userPositionedLabs);\n  };\n\n  State.prototype.pullLegendPt = function pullLegendPt(id) {\n    _.pull(this.legendPts, id);\n    return this.saveToState('legendPts', this.legendPts);\n  };\n\n  State.prototype.getLegendPts = function getLegendPts() {\n    return this.legendPts;\n  };\n\n  State.prototype.isLegendPtsSynced = function isLegendPtsSynced(currLegendPts) {\n    // KZ TODO this equality check looks insufficient\n    return this.legendPts.length === 0 || this.legendPts.length === currLegendPts.length;\n  };\n\n  State.prototype.pushUserPositionedLabel = function pushUserPositionedLabel(id, labx, laby, viewBoxDim) {\n    _.remove(this.userPositionedLabs, function (e) {\n      return e.id === id;\n    });\n\n    this.userPositionedLabs.push({\n      id: id,\n      x: (labx - viewBoxDim.x) / viewBoxDim.width,\n      y: (laby - viewBoxDim.y) / viewBoxDim.height\n    });\n    this.saveToState('userPositionedLabs', this.userPositionedLabs);\n  };\n\n  State.prototype.updateLabelsWithUserPositionedData = function updateLabelsWithUserPositionedData(labels, viewBoxDim) {\n    var _this = this;\n\n    if (!_.isEmpty(this.userPositionedLabs)) {\n      _(labels).each(function (label) {\n        var matchingLabel = _.find(_this.userPositionedLabs, function (e) {\n          return e.id === label.id;\n        });\n        if (matchingLabel != null) {\n          label.x = matchingLabel.x * viewBoxDim.width + viewBoxDim.x;\n          label.y = matchingLabel.y * viewBoxDim.height + viewBoxDim.y;\n        }\n      });\n    }\n  };\n\n  State.prototype.getUserPositionedLabIds = function getUserPositionedLabIds() {\n    return _.map(this.userPositionedLabs, function (e) {\n      return e.id;\n    });\n  };\n\n  return State;\n}();\n\nmodule.exports = State;\n\n},{}]},{},[1])(1)\n});\n\n"],"sourceRoot":"/source/"}