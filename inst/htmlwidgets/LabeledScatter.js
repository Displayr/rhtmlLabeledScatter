// Generated by CoffeeScript 1.8.0
var LabeledScatter,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

LabeledScatter = (function(_super) {
  __extends(LabeledScatter, _super);

  function LabeledScatter(el, width, height) {
    LabeledScatter.__super__.constructor.call(this, el, width, height);
    this.width = width;
    this.height = height;
    this._initializeState({
      selected: null
    });
  }

  LabeledScatter.prototype.resize = function(width, height) {
    this.width = width;
    this.height = height;
    return this._redraw();
  };

  LabeledScatter.prototype._processConfig = function() {
    console.log('_processConfig');
    console.log('the config has already been added to the context at @config, you must now "process" it');
    return console.log(this.config);
  };

  LabeledScatter.prototype._redraw = function() {
    var data, plot;
    console.log('_redraw');
    data = null;
    if ((this.config.X != null) && (this.config.Y != null)) {
      data = this.config;
    } else {
      data = testData;
      data.fixedAspectRatio = false;
    }
    plot = new RectPlot(this.width, this.height, data.X, data.Y, data.group, data.label, this.outerSvg, data.fixedAspectRatio);
    return plot.draw();
  };

  return LabeledScatter;

})(RhtmlSvgWidget);
