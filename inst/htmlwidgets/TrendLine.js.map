{"version":3,"file":"TrendLine.es6.js","names":[],"mappings":"","sources":["TrendLine.es6.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.TrendLine = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TrendLine = function () {\n  function TrendLine(pts, labs) {\n    var _this = this;\n\n    _classCallCheck(this, TrendLine);\n\n    this._createLineArrays = this._createLineArrays.bind(this);\n    this.getLineArray = this.getLineArray.bind(this);\n    this.getUniqueGroups = this.getUniqueGroups.bind(this);\n    this.pts = pts;\n    this.labs = labs;\n    this.linePts = {};\n    this.arrowheadLabels = {};\n    this.groupToLabel = {};\n\n    _.map(this.pts, function (pt, i) {\n      if (_this.linePts[pt.group] == null) {\n        _this.linePts[pt.group] = [];\n      }\n\n      if (_this.groupToLabel[pt.group] == null || _this.arrowheadLabels[pt.group] == null) {\n        _this.groupToLabel[pt.group] = _this.labs[i];\n        _this.arrowheadLabels[pt.group] = _this.labs[i];\n      }\n\n      return _this.linePts[pt.group].push({\n        x: pt.x,\n        y: pt.y,\n        z: pt.r,\n        r: pt.r\n      });\n    });\n\n    this.groups = _.keys(this.linePts);\n\n    this._createLineArrays();\n  }\n\n  TrendLine.prototype._createLineArrays = function _createLineArrays() {\n    var _this2 = this;\n\n    this.linesMapped = {};\n    this.lines = {};\n    this.arrowheadPts = [];\n\n    _.map(this.linePts, function (groupPts, groupName) {\n      var i = void 0;\n      _this2.lines[groupName] = [];\n      _this2.linesMapped[groupName] = [];\n\n      switch (groupPts.length) {\n        case 0:\n          return;\n        case 1:\n          _this2.arrowheadPts.push(groupPts[0]);\n          return;\n        case 2:\n          _this2.lines[groupName] = [[groupPts[0].x, groupPts[0].y, groupPts[1].x, groupPts[1].y]];\n          _this2.arrowheadPts.push(groupPts[1]);\n\n          _this2.arrowheadLabels[groupName].r = groupPts[1].r;\n          _this2.arrowheadLabels[groupName].x = groupPts[1].x - _this2.arrowheadLabels[groupName].width / 2;\n          _this2.arrowheadLabels[groupName].y = groupPts[1].y - _this2.arrowheadLabels[groupName].height / 2;\n          return;\n        default:\n          // Adds another point for every \"middle\" point\n          for (i = 0; i < groupPts.length; i++) {\n            var pt = groupPts[i];\n            _this2.linesMapped[groupName].push(pt);\n\n            if (i !== 0 && i !== groupPts.length - 1) {\n              _this2.linesMapped[groupName].push(pt);\n            }\n          }\n\n          // Constructs the line array\n          i = 0;\n          while (i < _this2.linesMapped[groupName].length) {\n            _this2.lines[groupName].push([_this2.linesMapped[groupName][i].x, _this2.linesMapped[groupName][i].y, _this2.linesMapped[groupName][i + 1].x, _this2.linesMapped[groupName][i + 1].y]);\n            i += 2;\n          }\n\n          var lastLinePt = _.last(_this2.linesMapped[groupName]);\n          _this2.arrowheadPts.push(lastLinePt);\n\n          _this2.arrowheadLabels[groupName].r = lastLinePt.r;\n          _this2.arrowheadLabels[groupName].x = lastLinePt.x - _this2.arrowheadLabels[groupName].width / 2;\n          _this2.arrowheadLabels[groupName].y = lastLinePt.y - _this2.arrowheadLabels[groupName].height / 2;\n      }\n    });\n    this.arrowheadLabels = _.values(this.arrowheadLabels);\n    return this.lines;\n  };\n\n  TrendLine.prototype.getLineArray = function getLineArray(group) {\n    if (this.lines == null) {\n      this._createLineArrays();\n    }\n\n    return this.lines[group];\n  };\n\n  TrendLine.prototype.getUniqueGroups = function getUniqueGroups() {\n    return this.groups;\n  };\n\n  return TrendLine;\n}();\n\nmodule.exports = TrendLine;\n\n},{}]},{},[1])(1)\n});\n\n"],"sourceRoot":"/source/"}